#!/usr/bin/env ruby

require 'optparse'
require 'methadone'
require 'gitignores'
require 'gitignores/version'
require 'gitignores/exceptions'

class App
  include Methadone::Main
  include Methadone::CLILogging
  include Methadone::ExitNow

  main do |command, *ignores|
    opts = {
      :ignores_dir => options['use-directory'],
      :update_ignores => options['update']
    }

    gitignores = Gitignores::Gitignores.new(options)

    if(options[:os])
      ignores.concat ["OSX", "Windows", "Linux"]
    end
    ignores.uniq!

    begin
      case command
      when "add"
        gitignores.add(ignores)
      when "show"
        gitignores.show(ignores)
      when "list"
        gitignores.list
      when "update"
        gitignores.update
      else
        help_now! "Command \"#{command}\" not recognized. Valid commands are 'add' 'show' 'list' 'update'"
      end
    rescue Gitignores::GitignoreNotFoundException => e
      exit_now(1, "Couldn't find ignore \"#{e.ignore_name}\"")
    end
  end

  options['use-directory'] = ENV['HOME'] + '/.gitignores'
  on("-d ignore-repository", "--use-directory", "The directory in which to store the github/gitignore directory")
  on("--update", "Update the github/gitignore repository")
  on("--os", "Include ignores for all operating systems")

  arg :command, :required, "One of add, show, list, update. add = appends a new gitignore to the .gitignore in current working directory. list = lists gitignore snippet names. show = dumps the given gitignore(s) to std_out. update = pull the latest from github/gitignore"
  arg :ignores, :any, "space-separated list of gitignore snippets. use the `list` command to see valid names (case sensitive)"

  description Gitignores::DESCRIPTION

  version Gitignores::VERSION

  use_log_level_option

  go!
end
